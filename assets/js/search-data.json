{
  
    
        "post0": {
            "title": "Primitive Types",
            "content": "Primitives Notes . Python . weakly type language | don&#39;t have to specifiy type of data, ie double quote for string | . Java . strongy type language | requires you to think about it more and which type of data it is | . Java C and Java . Java C executes then Java executes then the program runs | . Data Tyes . Data types with a captial letter are primitives are lowercase | Data types with a lowercase letter are wrappers . | Primitives are just the numbers assigned to memory . | primitives are built in . | Wrappers are classes and have methods, getters, and setters . | has built in code with it that can do more stuff | to compare two strings you can use &quot;.equals&quot; | methods are code associated with the type | string is basically an object | not built in has to be declared | . Primitive Hacks . Define in a class the following data types Demonstrate use of Primitives: int, double, boolean, string | . | . public class Primitives { public static void main(String[] args) { int x = 5; double z = 9.88; boolean w = true; System.out.println(x); System.out.println(z); System.out.println(w); } } Primitives.main(null); . 5 9.88 true . . Demonstrate use of Wrapper Class object: String | . Perform arithmetic expressions and assignment in a program code Code.org Lesson | . public class Math{ public static void main(String[] args){ int a = 3; int b = 10; double c = 2.5; c = 2 * a - 15 / b + c; System.out.println(c); } } Math.main(null); . 7.5 . Describe in comments how each data type choice is appropriate to application | Determine what is result in a variable as a result of an data type and expression | . import java.util.Scanner; // Import the Scanner class public class TemperatureConverter { // Defining the main public static void main(String[] arg){ Scanner inputTemp = new Scanner(System.in); System.out.println(&quot;Enter a temperature&quot;); int tempInt = inputTemp.nextInt(); // Stores as an integer. Scanner tempTypeinput = new Scanner(System.in); System.out.println(&quot;Is it in Fahrenheit or Celsius. Type C for Celsius or F for Fahrenheit.&quot;); String tempType = tempTypeinput.nextLine(); // Stores as a string if (tempType.equals(&quot;C&quot;)){ double convertedTemp = tempInt * 1.8; // Double is appropriate here because decimals are needed double convertedTempF = convertedTemp + 32; System.out.println(&quot;Celsius: &quot; + tempInt + &quot;°C and Fahrenheit: &quot; + convertedTempF + &quot;°F&quot;); } if (tempType.equals(&quot;F&quot;)) { double convertedTemp = tempInt - 32; double convertedTempC = convertedTemp/1.8; // Double is appropriate here because decimals are needed System.out.println(&quot;Fahrenheit: &quot; + tempInt + &quot;°F and Celsius: &quot; + convertedTempC + &quot;°C&quot;); } } } TemperatureConverter.main(null); . Enter a temperature Is it in Fahrenheit or Celsius. Type C for Celsius or F for Fahrenheit. Celsius: 0°C and Fahrenheit: 32.0°F . Perform an arithmetic expressions that uses casting, add comments that show how it produces desired results | . // Casting temporary treats on variable of a data type as another data type public class Math{ public static void main(String[] args) { double a = 6.5 + 5; System.out.println(a); System.out.println((int)(a)); double number = 11.0/4; int roundNumber = (int)(number+0.5); System.out.println(number); System.out.println(roundNumber); Scanner inputNumber = new Scanner(System.in); System.out.println(&quot;Enter a decimal to be rounded&quot;); double tobeRounded = inputNumber.nextDouble(); // Stores as an double. System.out.println((int)(tobeRounded + 0.5)); } } Math.main(null) . 11.5 11 2.75 3 Enter a decimal to be rounded 7 .",
            "url": "https://b-g101.github.io/APCSA-BRIA/jupyter/2022/08/28/primitive-types.html",
            "relUrl": "/jupyter/2022/08/28/primitive-types.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Bash and Checks",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_direct=$HOME/vscode # change vscode to different name to test git clone export project=$project_direct/temprepo # changed it to an empty repository export project_repo=&quot;https://github.com/B-G101/temp-repo.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_direct ] then echo &quot;Directory $project_direct does not exists... makinng directory $project_direct&quot; mkdir -p $project_direct fi echo &quot;Directory $project_direct exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_direct git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/briag/vscode exists. Directory /home/briag/vscode/temprepo does not exists... cloning https://github.com/B-G101/temp-repo.git fatal: destination path &#39;temp-repo&#39; already exists and is not an empty directory. Directory /home/briag/vscode/temprepo exists. . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags cd /home/briag/vscode/APCSA-BRIA-1 echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned bash: cd: /home/briag/vscode/temprepo: No such file or directory /home/briag list top level or root of files with project pulled from github Anaconda3-2022.05-Linux-x86_64.sh ijava-1.3.0.zip java anaconda3 install.py vscode list again with hidden files pulled from github . .gitconfig .npm ijava-1.3.0.zip .. .ipython .profile install.py .bash_history .jupyter .sudo_as_admin_successful java .bash_logout .landscape .vscode-server vscode .bashrc .local .wget-hsts .cache .motd_shown Anaconda3-2022.05-Linux-x86_64.sh .conda .node-gyp anaconda3 list all files in long format total 488 drwxr-xr-x 16 briag briag 4096 Aug 28 16:35 . drwxr-xr-x 5 briag briag 4096 Aug 28 16:35 .. -rw-r--r-- 1 briag briag 432 Aug 28 14:16 .devcontainer.json drwxr-xr-x 7 briag briag 4096 Aug 28 16:47 .git -rw-r--r-- 1 briag briag 85 Aug 28 14:16 .gitattributes drwxr-xr-x 4 briag briag 4096 Aug 28 16:35 .github -rw-r--r-- 1 briag briag 175 Aug 28 14:16 .gitignore -rw-r--r-- 1 briag briag 207007 Aug 28 14:16 2022-05-15-07-21-16.png -rw-r--r-- 1 briag briag 90979 Aug 28 14:16 2022-05-15-07-24-25.png -rw-r--r-- 1 briag briag 81691 Aug 28 14:16 2022-05-15-07-25-15.png -rw-r--r-- 1 briag briag 1347 Aug 28 14:16 Gemfile -rw-r--r-- 1 briag briag 11552 Aug 28 14:16 LICENSE -rw-r--r-- 1 briag briag 1475 Aug 28 14:16 Makefile -rw-r--r-- 1 briag briag 3631 Aug 28 14:16 README.md drwxr-xr-x 2 briag briag 4096 Aug 28 16:35 _action_files -rw-r--r-- 1 briag briag 3807 Aug 28 14:16 _config.yml drwxr-xr-x 2 briag briag 4096 Aug 28 16:35 _fastpages_docs drwxr-xr-x 2 briag briag 4096 Aug 28 16:35 _includes drwxr-xr-x 2 briag briag 4096 Aug 28 16:35 _layouts drwxr-xr-x 4 briag briag 4096 Aug 28 16:35 _notebooks drwxr-xr-x 2 briag briag 4096 Aug 28 16:35 _pages drwxr-xr-x 2 briag briag 4096 Aug 28 16:35 _plugins drwxr-xr-x 2 briag briag 4096 Aug 28 16:35 _posts drwxr-xr-x 3 briag briag 4096 Aug 28 16:35 _sass drwxr-xr-x 2 briag briag 4096 Aug 28 16:35 _word drwxr-xr-x 4 briag briag 4096 Aug 28 16:35 assets -rw-r--r-- 1 briag briag 1180 Aug 28 14:16 docker-compose.yml drwxr-xr-x 3 briag briag 4096 Aug 28 16:35 images -rw-r--r-- 1 briag briag 636 Aug 28 14:16 index.html . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory cd /home/briag/vscode/APCSA-BRIA-1/_posts ls -l # list posts . Look for posts bash: cd: /home/briag/vscode/temprepo/_posts: No such file or directory /home/briag/vscode/APCSA-BRIA-1/_notebooks total 8 -rw-r--r-- 1 briag briag 2069 Aug 28 14:16 2020-01-14-test-markdown-post.md -rw-r--r-- 1 briag briag 737 Aug 28 14:16 README.md . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory cd /home/briag/vscode/APCSA-BRIA-1/_notebooks ls -l # list notebooks . Look for notebooks bash: cd: /home/briag/vscode/temprepo/_notebooks: No such file or directory /home/briag/vscode/APCSA-BRIA-1 total 3116 -rw-r--r-- 1 briag briag 3163230 Aug 28 14:16 2020-02-20-test.ipynb -rw-r--r-- 1 briag briag 428 Aug 28 16:45 2022-08-28-bash.ipynb -rw-r--r-- 1 briag briag 7964 Aug 28 15:59 2022-08-28-primitive-types.ipynb -rw-r--r-- 1 briag briag 784 Aug 28 14:16 README.md drwxr-xr-x 2 briag briag 4096 Aug 28 16:35 ghtop_images drwxr-xr-x 2 briag briag 4096 Aug 28 16:35 my_icons . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . Show the shell environment variables, key on left of equal value on right SHELL=/bin/bash PYTHONUNBUFFERED=1 project=/home/briag/vscode/temprepo CONDA_EXE=/home/briag/anaconda3/bin/conda _CE_M= WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=BG101 PWD=/home/briag/vscode/APCSA-BRIA-1/_posts LOGNAME=briag CONDA_PREFIX=/home/briag/anaconda3 HOME=/home/briag LANG=C.UTF-8 WSL_INTEROP=/run/WSL/6221_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/home/briag/vscode/temprepo/_posts LESSCLOSE=/usr/bin/lesspipe %s %s VSCODE_HANDLES_SIGPIPE=true TERM=xterm-256color _CE_CONDA= LESSOPEN=| /usr/bin/lesspipe %s USER=briag project_direct=/home/briag/vscode PYTHONIOENCODING=utf-8 notebooks=/home/briag/vscode/temprepo/_notebooks CONDA_SHLVL=1 SHLVL=1 PAGER=cat project_repo=https://github.com/B-G101/temp-repo.git VSCODE_CWD=/mnt/c/Users/briag/AppData/Local/Programs/Microsoft VS Code CONDA_PYTHON_EXE=/home/briag/anaconda3/bin/python PS1=[PEXP [ ]ECT_PROMPT&gt; CONDA_DEFAULT_ENV=base WSLENV=VSCODE_WSL_EXT_LOCATION/up VSCODE_WSL_EXT_LOCATION=/mnt/c/Users/briag/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3 PATH=/home/briag/anaconda3/bin:/home/briag/anaconda3/condabin:/home/briag/.vscode-server/bin/e4503b30fc78200f846c62cf8091b76ff5547662/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0:/mnt/c/WINDOWS/System32/OpenSSH:/mnt/c/Program Files/Git/cmd:/mnt/c/Users/briag/AppData/Local/Programs/Python/Python39/Scripts:/mnt/c/Users/briag/AppData/Local/Programs/Python/Python39:/mnt/c/Users/briag/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/briag/AppData/Local/Programs/Microsoft VS Code/bin VSCODE_NLS_CONFIG={&#34;locale&#34;:&#34;en&#34;,&#34;availableLanguages&#34;:{}} HOSTTYPE=x86_64 VSCODE_HANDLES_UNCAUGHT_ERRORS=true OLDPWD=/home/briag/vscode/APCSA-BRIA-1/_notebooks VSCODE_IPC_HOOK_CLI=/tmp/vscode-ipc-06cc32ce-ad22-4fe0-8a01-4dfdf25dc8cb.sock _=/usr/bin/env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . bash: cd: /home/briag/vscode/temprepo: No such file or directory show the secrets of .git bash: cd: .git: No such file or directory total 8 -rw-r--r-- 1 briag briag 2069 Aug 28 14:16 2020-01-14-test-markdown-post.md -rw-r--r-- 1 briag briag 737 Aug 28 14:16 README.md look at config file cat: config: No such file or directory . .",
            "url": "https://b-g101.github.io/APCSA-BRIA/jupyter/unit1/2022/08/28/bash.html",
            "relUrl": "/jupyter/unit1/2022/08/28/bash.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://b-g101.github.io/APCSA-BRIA/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://b-g101.github.io/APCSA-BRIA/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Notes",
          "content": "Unit Topic . Unit 1 | Primitives and Wrappers | .",
          "url": "https://b-g101.github.io/APCSA-BRIA/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://b-g101.github.io/APCSA-BRIA/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}